"7/23/2020", 20, 19.5,
"7/24/2020", 20, 20,
"7/25/2020", 20, 20.9,
"7/26/2020", 19.3, 21,
"7/27/2020", 18.5, 20.7,
"7/28/2020", 16.5, 20.5,
"7/29/2020", 16.4, 20.5,
"7/30/2020", 16.5, 20.8,
"7/31/2020", 16.4, 20.5,
"8/1/2020", 16, 20,
"8/2/2020", 16, 20,
"8/3/2020", 16, 20
)
df <- df %>%
as.character(date)
df_long <- df%>%
pivot_longer(cols = c(count_mask, count_noMask),
names_to = "mask_type",
values_to = "count"
)
df <- tribble(
~date, ~count_mask, ~count_noMask,
"7/12/2020", 26, 21,
"7/13/2020", 23, 20.5,
"7/14/2020", 19.7, 20.3,
"7/15/2020", 20, 20.5,
"7/16/2020", 20, 20.9,
"7/17/2020", 20, 20.5,
"7/18/2020", 20, 20.4,
"7/19/2020", 20, 20.1,
"7/20/2020", 20.2, 19.8,
"7/21/2020", 21, 19.5,
"7/22/2020", 20.5, 19.5,
"7/23/2020", 20, 19.5,
"7/24/2020", 20, 20,
"7/25/2020", 20, 20.9,
"7/26/2020", 19.3, 21,
"7/27/2020", 18.5, 20.7,
"7/28/2020", 16.5, 20.5,
"7/29/2020", 16.4, 20.5,
"7/30/2020", 16.5, 20.8,
"7/31/2020", 16.4, 20.5,
"8/1/2020", 16, 20,
"8/2/2020", 16, 20,
"8/3/2020", 16, 20
)
View(df)
View(df)
df_long <- df%>%
pivot_longer(cols = c(count_mask, count_noMask),
names_to = "mask_type",
values_to = "count"
)
View(df_long)
View(df_long)
df_long %>%
ggplot(aes(
x = date,
y = count,
color = mask_type) +
geom_line(size = 1.2) +
geom_point(size = 2) +
labs(
title = "Mask vs. No Mask Count Over Time",
x = "Date",
y = "Count",
color = "Type"
) +
theme_minimal())
ggplot(df_long, aes(
x = date,
y = count,
color = mask_type) +
geom_line(size = 1.2) +
geom_point(size = 2) +
labs(
title = "Mask vs. No Mask Count Over Time",
x = "Date",
y = "Count",
color = "Type"
) +
theme_minimal())
View(df_long)
View(df_long)
df_long <- df%>%
pivot_longer(cols = c(count_mask, count_noMask),
names_to = "mask_type",
values_to = "count"
)
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line() +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "No mask vs. mask mandate counties", color = "Mask Types") +
theme_light()
ggplot(df_long, aes(x = date, y = count, color = mask_type)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
labs(title = "Mask vs. No Mask Count Over Time",
x = "Date",
y = "Count",
color = "Type") +
theme_minimal()
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line() +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "No mask vs. mask mandate counties", color = "Mask Types") +
theme_light()
```
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line() +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "No mask vs. mask mandate counties", color = "Mask Types") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
df <- tribble(
~date, ~mask, ~no_mask,
"7/12/2020", 26, 21,
"7/13/2020", 23, 20.5,
"7/14/2020", 19.7, 20.3,
"7/15/2020", 20, 20.5,
"7/16/2020", 20, 20.9,
"7/17/2020", 20, 20.5,
"7/18/2020", 20, 20.4,
"7/19/2020", 20, 20.1,
"7/20/2020", 20.2, 19.8,
"7/21/2020", 21, 19.5,
"7/22/2020", 20.5, 19.5,
"7/23/2020", 20, 19.5,
"7/24/2020", 20, 20,
"7/25/2020", 20, 20.9,
"7/26/2020", 19.3, 21,
"7/27/2020", 18.5, 20.7,
"7/28/2020", 16.5, 20.5,
"7/29/2020", 16.4, 20.5,
"7/30/2020", 16.5, 20.8,
"7/31/2020", 16.4, 20.5,
"8/1/2020", 16, 20,
"8/2/2020", 16, 20,
"8/3/2020", 16, 20
)
df_long <- df%>%
pivot_longer(cols = c(mask, no_mask),
names_to = "mask_type",
values_to = "count"
)
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line() +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Case Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line() +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Case Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line() +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Case Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 2, size = 8))
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line() +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Case Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line(size = 1) +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Case Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line(size = 0.8) +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Case Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
df <- tribble(
~date, ~county_mask, ~county_noMask,
"7/12/2020", 26, 21,
"7/13/2020", 23, 20.5,
"7/14/2020", 19.7, 20.3,
"7/15/2020", 20, 20.5,
"7/16/2020", 20, 20.9,
"7/17/2020", 20, 20.5,
"7/18/2020", 20, 20.4,
"7/19/2020", 20, 20.1,
"7/20/2020", 20.2, 19.8,
"7/21/2020", 21, 19.5,
"7/22/2020", 20.5, 19.5,
"7/23/2020", 20, 19.5,
"7/24/2020", 20, 20,
"7/25/2020", 20, 20.9,
"7/26/2020", 19.3, 21,
"7/27/2020", 18.5, 20.7,
"7/28/2020", 16.5, 20.5,
"7/29/2020", 16.4, 20.5,
"7/30/2020", 16.5, 20.8,
"7/31/2020", 16.4, 20.5,
"8/1/2020", 16, 20,
"8/2/2020", 16, 20,
"8/3/2020", 16, 20
)
df_long <- df%>%
pivot_longer(cols = c(county_mask, county_noMask),
names_to = "mask_type",
values_to = "count"
)
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line(size = 0.8) +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Case Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
df_long <- df%>%
pivot_longer(cols = c(county_mask, county_noMask),
names_to = "mask_type",
values_to = "count"
)
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line(size = 0.8) +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(readxl)
library(tidyr)
qualtrics_partial <-read.csv("Cynthia Thesis_January 30, 2025_12.22.csv")
## cleaning the data by PID
qualtrics_partial <- qualtrics_partial %>%
mutate(PID = replace(PID, which(PID == 48)[2], 47)) %>%
select(-c(StartDate, EndDate, Status, IPAddress, Progress, Duration..in.seconds., RecordedDate, ResponseId, RecipientFirstName, RecipientLastName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude)) %>%
mutate(PID = as.numeric(PID)) %>%
arrange(PID) %>%
filter(!is.na(PID))
## loading the data sheet from Google sheets
iss_partial <-read_excel("Intersectional Stereotypes Data.xlsx")
iss_partial <- iss_partial %>%
filter(!is.na(PID))
## merging two data set by PID
thesis_partial <- full_join(qualtrics_partial, iss_partial, by = "PID")
## excluding the duplicated PID with empty Qualtrics responses
## Identify PIDs that appear more than once
duplicate_pids <- thesis_partial %>%
count(PID) %>%
filter(n > 1) %>%
pull(PID)
## Remove duplicated PIDs only if their "smart_screener1" response is blank
thesis_partial <- thesis_partial %>%
filter(!(PID %in% duplicate_pids & (is.na(smart_screener1) | smart_screener1 == "")))
## exclude the excluded participants
thesis_partial <- thesis_partial %>%
filter(exclude == "no")
## creating a composite score for each social group being selected
## manually specify column names for smart and nice selections
smart_cols <- c("S1_1", "S1_2", "S1_3", "S1_4", "S1_5", "S1_6", "S1_7",
"S1_8", "S1_9", "S1_10", "S1_11", "S1_12", "S1_13", "S1_14", "S1_15", "S2_1", "S2_2", "S2_3", "S2_4", "S2_5", "S2_6", "S2_7",
"S2_8", "S2_9", "S2_10", "S2_11", "S2_12", "S2_13", "S2_14", "S2_15")
nice_cols <- c("N1_1", "N1_2", "N1_3", "N1_4", "N1_5", "N1_6", "N1_7",
"N1_8", "N1_9", "N1_10", "N1_11", "N1_12", "N1_13", "N1_14", "N1_15", "N2_1", "N2_2", "N2_3", "N2_4", "N2_5", "N2_6", "N2_7",
"N2_8", "N2_9", "N2_10", "N2_11", "N2_12", "N2_13", "N2_14", "N2_15")
## create a function to count the numbers of each social group being selected
count_selections <- function(data, cols) {
data %>%
select(PID, all_of(cols)) %>%
mutate(CompletedVersion = ifelse(rowSums(!is.na(select(., starts_with("S1")))) > 0, "S1", "S2")) %>%
pivot_longer(cols = -c(PID, CompletedVersion), names_to = "Question", values_to = "Selection") %>%
filter(!is.na(Selection) & Selection != "") %>%  # Remove unassigned version (empty values)
group_by(PID, Selection) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Selection, values_from = Count, values_fill = list(Count = 0))
}
## process smart and nice data separately
smart_counts <- count_selections(thesis_partial, smart_cols)
nice_counts <- count_selections(thesis_partial, nice_cols)
## save a csv just in case
write.csv(smart_counts, "smart_selections.csv", row.names = FALSE)
write.csv(nice_counts, "nice_selections.csv", row.names = FALSE)
smart_long <- smart_counts %>%
mutate(stereotype_dimension = "Smart") %>%
pivot_longer(cols = -c(PID, stereotype_dimension), names_to = "targetGroup", values_to = "choice_score")
nice_long <- nice_counts %>%
mutate(stereotype_dimension = "Nice") %>%
pivot_longer(cols = -c(PID, stereotype_dimension), names_to = "targetGroup", values_to = "choice_score")
# Combine into one dataset
long_data <- bind_rows(smart_long, nice_long)
View(long_data)
long_data <- long_data %>%
mutate(targetGender = case_when(grepl("man", targetGroup) ~ "Man",
grepl("woman", targetGroup) ~ "Woman")) %>%
mutate(targetRace = case_when(
grepl("Black", targetGroup) ~ "Black",
grepl("White", targetGroup) ~ "White",
grepl("Asian", targetGroup) ~ "Asian"
)) %>%
rename(child_id = PID)
View(long_data)
View(long_data)
grep("woman", targetGroup)
grep("woman", long_data$targetGroup)
ggplot(df_long, aes(x = date, y = count, color = mask_type)) +
geom_line(size = 1.2) +
scale_y_continuous(limits = c(0, 30)) +  # Expanding y-axis to flatten differences
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal()
library(tidyverse)
library(ggplot2)
df <- tribble(
~date, ~county_mask, ~county_noMask,
"7/12/2020", 26, 21,
"7/13/2020", 23, 20.5,
"7/14/2020", 19.7, 20.3,
"7/15/2020", 20, 20.5,
"7/16/2020", 20, 20.9,
"7/17/2020", 20, 20.5,
"7/18/2020", 20, 20.4,
"7/19/2020", 20, 20.1,
"7/20/2020", 20.2, 19.8,
"7/21/2020", 21, 19.5,
"7/22/2020", 20.5, 19.5,
"7/23/2020", 20, 19.5,
"7/24/2020", 20, 20,
"7/25/2020", 20, 20.9,
"7/26/2020", 19.3, 21,
"7/27/2020", 18.5, 20.7,
"7/28/2020", 16.5, 20.5,
"7/29/2020", 16.4, 20.5,
"7/30/2020", 16.5, 20.8,
"7/31/2020", 16.4, 20.5,
"8/1/2020", 16, 20,
"8/2/2020", 16, 20,
"8/3/2020", 16, 20
)
df_long <- df%>%
pivot_longer(cols = c(county_mask, county_noMask),
names_to = "mask_type",
values_to = "count"
)
df_long %>%
ggplot(aes(
x = date,
y = count,
group = mask_type,
color = mask_type
)) +
geom_line(size = 0.8) +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
ggplot(df_long, aes(x = date, y = count, color = mask_type)) +
geom_line(size = 1.2) +
scale_y_continuous(limits = c(0, 30)) +  # Expanding y-axis to flatten differences
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal()
ggplot(df_long, aes(x = date, y = count, color = mask_type)) +
geom_jitter(size = 1.2) +
scale_y_continuous(limits = c(0, 30)) +  # Expanding y-axis to flatten differences
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal()
ggplot(df_long, aes(x = date, y = count, color = mask_type)) +
geom_jitter(size = 1.2) +
scale_y_continuous(limits = c(0, 30)) +  # Expanding y-axis to flatten differences
geom_smooth(method = "loess", se = FALSE, linetype = "dashed") +  # Blurring trend
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal()
ggplot(df_long, aes(x = date, y = count, color = mask_type)) +
geom_line(size = 1.2) +
scale_y_continuous(limits = c(0, 30)) +  # Expanding y-axis to flatten differences
geom_smooth(method = "loess", se = FALSE, linetype = "dashed") +  # Blurring trend
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal()
ggplot(df_long, aes(x = date, y = count, color = mask_type)) +
geom_(size = 1.2) +
scale_y_continuous(limits = c(0, 30)) +  # Expanding y-axis to flatten differences
geom_smooth(method = "loess", se = FALSE, linetype = "dashed") +  # Blurring trend
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
ggplot(df_long, aes(x = date, y = count, color = mask_type)) +
geom_line(size = 1.2) +
scale_y_continuous(limits = c(0, 30)) +  # Expanding y-axis to flatten differences
geom_smooth(method = "loess", se = FALSE, linetype = "dashed") +  # Blurring trend
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
ggplot(df_long, aes(x = date, y = count, color = mask_type, group = mask_type)) +
geom_line(size = 1.2) +
scale_y_continuous(limits = c(min(df_long$count), max(df_long$count) * 1.1)) +
geom_smooth(method = "loess", se = FALSE, linetype = "dashed") +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
ggplot(df_long, aes(x = date, y = count, color = mask_type, group = mask_type)) +
geom_bar() +
ggtitle("Trends in Kansas COVID-19 Daily Cases/Per 100K Population") +
labs(x = "Date", y = "Count", color = "No mask vs. mask mandate counties") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
ggplot(df_long, aes(x = date, y = count, fill = mask_type)) +
geom_bar(stat = "identity", position = "dodge") +  # Use bars instead of lines
scale_y_reverse() +  # Flip the y-axis
scale_x_discrete(limits = rev(unique(df_long$date))) +  # Reverse x-axis
labs(title = "No Clear Effect of Mask Mandates on COVID-19 Cases",
x = "Date (Reversed)",
y = "COVID-19 Cases Per 100K Population",
fill = "County Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_long, aes(x = date, y = count, fill = mask_type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "No Clear Effect of Mask Mandates on COVID-19 Cases",
x = "Date (Reversed)",
y = "COVID-19 Cases Per 100K Population",
fill = "County Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_long, aes(y = date, x = count, fill = mask_type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "No Clear Effect of Mask Mandates on COVID-19 Cases",
x = "Date (Reversed)",
y = "COVID-19 Cases Per 100K Population",
fill = "County Type") +
theme_minimal()
ggplot(df_long, aes(y = date, x = count, fill = mask_type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "No Clear Effect of Mask Mandates on COVID-19 Cases",
x = "COVID-19 Cases Per 100K Population",
y = "Date",
fill = "County Type") +
theme_minimal()
